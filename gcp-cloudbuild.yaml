steps:
# Remove old docker images
- name: 'gcr.io/cloud-builders/gcloud'
  id: CLEAN
  entrypoint: 'bash'
  args:
  - '-c'
  - |- 
    test=$(gcloud artifacts docker images list $_SERVICE_REPO | grep IMAGE)
    echo $test
    gcloud artifacts docker images list $_SERVICE_REPO | grep IMAGE

# # Docker build image
# - name: 'gcr.io/cloud-builders/docker'
#   id: BUILD
#   args: ['build', '--build-arg', 'OWN_KEY=$_OWM_KEY', '--build-arg', 'TELEBOT_KEY=$_TELEBOT_KEY', '--build-arg', 'WEBHOOK_HOST=$_PUBLIC_STATIC_IP', '--build-arg', 'WEBHOOK_PORT=$_HTTPS_PORT', '-t', '$_SERVICE_IMAGE', '.', '-f', 'Dockerfile']

#   # Docker push image
# - name: 'gcr.io/cloud-builders/docker'
#   id: PUSH
#   args: ['push', '$_SERVICE_IMAGE']
 
substitutions:
    _SERVICE_IMAGE        : ${_SERVICE_REPO}/${_SERVICE_NAME}:${SHORT_SHA}
    _SERVICE_REPO         : ${_SERVICE_REGION}-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_REPO_NAME}
    _SERVICE_REGION       : us-east1
    _SERVICE_REPO_NAME    : skbweatherbot
    _SERVICE_NAME         : skbweatherbot
    _OWM_KEY              : sdfsdfsdfsdf
    _TELEBOT_KEY          : dsfsdfsdf
    _PUBLIC_STATIC_IP     : "35.231.130.232"
    _HTTPS_PORT           : "8443"